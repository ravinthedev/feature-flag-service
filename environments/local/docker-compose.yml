version: '3.8'

# Load environment variables from docker.env file
# Usage: docker-compose --env-file docker.env up -d

name: feature-flag-service

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: feature-flag-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-feature_flag_db}
      POSTGRES_USER: ${DB_USERNAME:-feature_flag_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-feature_flag_password}
    # ports:
    #   - "5432:5432"  # Only expose if needed for external access
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - feature-flag-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: feature-flag-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    # ports:
    #   - "6379:6379"  # Only expose if needed for external access
    volumes:
      - redis_data:/data
    networks:
      - feature-flag-network

  # Laravel Backend
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    container_name: feature-flag-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=${APP_KEY:-base64:TM6ZzvHJC0C2VNSWgXWGVGky5uVFHhlKBu9KSbc1uJY=}
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE:-feature_flag_db}
      - DB_USERNAME=${DB_USERNAME:-feature_flag_user}
      - DB_PASSWORD=${DB_PASSWORD:-feature_flag_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    volumes:
      - ../../backend:/var/www/html
      - /var/www/html/vendor
      - /var/www/html/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - feature-flag-network
    command: >
      sh -c "
        composer install --no-interaction --prefer-dist --optimize-autoloader &&
        php artisan key:generate --force &&
        php artisan migrate --force &&
        php artisan serve --host=0.0.0.0 --port=8000
      "

  # Next.js Frontend
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: feature-flag-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ../../frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - feature-flag-network
    command: npm run dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  feature-flag-network:
    driver: bridge
